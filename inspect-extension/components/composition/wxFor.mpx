<template>
  <view class="list">
    <view wx:for="{{listData}}" wx:key="*this">
      Case1: No item or index.
    </view>
    <view wx:for="{{listData}}" wx:key="*this">
      Case2: No index.
      {{ item }}
    </view>
    <view wx:for="{{listData}}" wx:key="*this">
      Case3: No item.
      {{ index }}
    </view>
    <view wx:for="{{listData}}" wx:for-item="item1" wx:key="*this">
      Case4: use wx:for-item.
      {{ item1 }} {{ index }}
    </view>
    <view wx:for="{{listData}}" wx:for-index="index1" wx:key="*this">
      Case5: use wx:for-index.
      {{ item }} {{ index1 }}
    </view>
    <view wx:for="{{listData}}" wx:for-item="item1" wx:for-index="index1"
      wx:key="*this">
      Case6: use wx:for-item and wx:for-index.
      {{ item1 }} {{ index1 }}
    </view>
    <view wx:for="{{[11, 12, 13]}}" wx:for-item="item1" wx:for-index="index1"
      wx:key="*this">
      Case7: use directed array value. 'item1' should be number.
      {{ item1 }} {{ index1 }}
    </view>
    <view wx:for="{{['a', 'b', 3]}}" wx:for-item="item1" wx:for-index="index1"
      wx:key="*this">
      Case8: use directed array value. 'item1' should be string | number.
      {{ item1 }} {{ index1 }}
    </view>
    <view wx:for="{{listData}}" wx:for-item="item1" wx:for-index="index1"
      wx:key="*this">
      Case9: nested for-loops
      {{ item1 }} {{ index1 }}
      <view wx:for="{{[item1, item1]}}" wx:for-item="item11"
        wx:for-index="index11" wx:key="*this">
        Case6: use wx:for-item and wx:for-index.
        {{ item11 }} {{ index11 }}
      </view>
    </view>
    <!-- wx:for 比 wx:if 优先级更高，  -->
    <view wx:for="{{listData2}}" wx:key="*this" wx:if="{{item}}">
      Case7: item should be string.
      {{ item }} {{ index }}
    </view>
  </view>
</template>

<script setup lang="ts">
const listData = ['手机', '电视', '电脑']
const listData2 = ['手机', '电视', undefined]

defineExpose({
  listData,
  listData2
})
</script>

<style lang="stylus">
.list
  background-color red
</style>

<script type="application/json">
  {
    "component": true
  }
</script>
